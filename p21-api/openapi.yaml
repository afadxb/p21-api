openapi: 3.0.3
info:
  title: P21 API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /inventory:
    get:
      summary: List inventory items
      description: |
        Returns a paginated list of inventory records from the P21 database.
        The logic for this endpoint lives in `routes/inventory.js` and supports
        optional paging, sorting, and filtering of inactive items.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of records to return (default `100`).
        - in: query
          name: paging
          schema:
            type: boolean
          description: When `true`, enables SQL paging.
        - in: query
          name: page
          schema:
            type: integer
          description: Page number when `paging=true`.
        - in: query
          name: order
          schema:
            type: string
            enum: [asc, desc]
          description: Sort order for the `item_id` column.
        - in: query
          name: inactive
          schema:
            type: boolean
          description: Include inactive items (`true` or `false`).
      responses:
        '200':
          description: Inventory list with paging metadata
  /inventory/{item_id}:
    get:
      summary: Get item by id
      description: |
        Retrieves a single inventory record. Implemented in
        `routes/inventory.js`.
      parameters:
        - in: path
          name: item_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item details
        '404':
          description: Item not found
  /orders:

    post:
      summary: Export order to CSV
      description: |
        Exports an order to CSV files for downstream processing. The
        implementation resides in `routes/orders.js` and also records export
        status information in the `order_log` table.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id, sales_location_id, srx_order_id, lines]
              properties:
                customer_id:
                  type: string
                sales_location_id:
                  type: string
                srx_order_id:
                  type: string
                notes:
                  type: string
                lines:
                  type: array
                  items:
                    type: object
                    required: [item_id, qty]
                    properties:
                      item_id:
                        type: string
                      qty:
                        type: integer
                      notes:
                        type: string
      responses:
        '200':
          description: CSV paths returned

  /orders/{order_id}:
    get:
      summary: Get sales order status
      description: |
        Retrieves a sales order header and its lines from P21. The `order_id`
        can be either the numeric `order_no` or the `order_ref` associated with
        the order. Each record is augmented with a `status` field derived from
        various flag columns. Implemented in `routes/orders.js`.
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sales order header and lines returned with status fields
        '404':
          description: Order not found

